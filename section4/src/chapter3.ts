// 함수 오버로딩
// 하나의 함수를 매개변수의 개수나 타입에 따라 여러가지 버전으로 만드는 문법
// -> 하나의 함수 func
// -> 모든 매개변수의 타입은 number
// -> Ver1. 매개변수가 1개 -> 이 매개변수에 20을 곱한 값을 출력
// -> Ver2. 매개변수가 3개 -> 이 매개변수들을 다 더한 값을 출력

// 타입스크립트에서 함수 오버로딩을 구현하려면 가장 먼저 함수에 어떤 버전들이 있는지 알려줘야함.
// 오버로드 시그니쳐 : 함수의 구현없이 선언식만 써놓은것
// -> 함수를 오버로드 하기 위해서 매개변수 별로 다른 버전을 명시해주기 위해 사용
function func(a: number): void;
function func(a: number, b: number, c: number): void;

// 실제 구현부(= 구현 시그니쳐)
// function func() {}

// 오버로드 시그니쳐들의 매개변수의 개수에 차이가 있다면
// 선택적 프로퍼티로 매개변수를 정의하여 모든 오버로드 시그니쳐들이 의미있도록 만들어줘야함.
function func(a: number, b?: number, c?: number) {
  if (typeof b === "number" && typeof c === "number") {
    console.log(a + b + c);
  } else {
    console.log(a * 20);
  }
}

// 어떤 함수가 오버로드 시그니쳐를 가지고 있으면 해당 함수를 호출할 때
// 인수들의 타입이 실제 구현부에 정의된 매개변수의 개수나 타입을 따르지않고 오버로드 시그니쳐의 버전 중 하나를 따름.
// func();
func(1);
// func(1, 2);
func(1, 2, 3);
